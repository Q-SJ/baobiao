/**
 * This class is generated by jOOQ
 */
package com.iot.baobiao.jooq.tables;


import com.iot.baobiao.jooq.Keys;
import com.iot.baobiao.jooq.Nutch;
import com.iot.baobiao.jooq.tables.records.SelfSiteRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SelfSite extends TableImpl<SelfSiteRecord> {

    private static final long serialVersionUID = 1852086774;

    /**
     * The reference instance of <code>nutch.self_site</code>
     */
    public static final SelfSite SELF_SITE = new SelfSite();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SelfSiteRecord> getRecordType() {
        return SelfSiteRecord.class;
    }

    /**
     * The column <code>nutch.self_site.id</code>.
     */
    public final TableField<SelfSiteRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>nutch.self_site.url</code>.
     */
    public final TableField<SelfSiteRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>nutch.self_site.code</code>. ʡ
     */
    public final TableField<SelfSiteRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "ʡ");

    /**
     * The column <code>nutch.self_site.name</code>.
     */
    public final TableField<SelfSiteRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>nutch.self_site.category</code>.
     */
    public final TableField<SelfSiteRecord, String> CATEGORY = createField("category", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>nutch.self_site.order_index</code>.
     */
    public final TableField<SelfSiteRecord, Integer> ORDER_INDEX = createField("order_index", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>nutch.self_site.fetch_time</code>. ץȡʱ
     */
    public final TableField<SelfSiteRecord, Timestamp> FETCH_TIME = createField("fetch_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "ץȡʱ");

    /**
     * The column <code>nutch.self_site.text_value</code>.
     */
    public final TableField<SelfSiteRecord, String> TEXT_VALUE = createField("text_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>nutch.self_site.html_value</code>.
     */
    public final TableField<SelfSiteRecord, String> HTML_VALUE = createField("html_value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>nutch.self_site.date_value</code>.
     */
    public final TableField<SelfSiteRecord, Timestamp> DATE_VALUE = createField("date_value", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>nutch.self_site.num_value</code>.
     */
    public final TableField<SelfSiteRecord, BigDecimal> NUM_VALUE = createField("num_value", org.jooq.impl.SQLDataType.DECIMAL.precision(18, 2), this, "");

    /**
     * The column <code>nutch.self_site.server_num</code>.
     */
    public final TableField<SelfSiteRecord, String> SERVER_NUM = createField("server_num", org.jooq.impl.SQLDataType.CHAR.length(14).defaultValue(org.jooq.impl.DSL.inline("0.0.0.0", org.jooq.impl.SQLDataType.CHAR)), this, "");

    /**
     * The column <code>nutch.self_site.domain</code>.
     */
    public final TableField<SelfSiteRecord, String> DOMAIN = createField("domain", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>nutch.self_site.url_id</code>.
     */
    public final TableField<SelfSiteRecord, Integer> URL_ID = createField("url_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>nutch.self_site.location</code>.
     */
    public final TableField<SelfSiteRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>nutch.self_site</code> table reference
     */
    public SelfSite() {
        this("self_site", null);
    }

    /**
     * Create an aliased <code>nutch.self_site</code> table reference
     */
    public SelfSite(String alias) {
        this(alias, SELF_SITE);
    }

    private SelfSite(String alias, Table<SelfSiteRecord> aliased) {
        this(alias, aliased, null);
    }

    private SelfSite(String alias, Table<SelfSiteRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Nutch.NUTCH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SelfSiteRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SELF_SITE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SelfSiteRecord> getPrimaryKey() {
        return Keys.KEY_SELF_SITE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SelfSiteRecord>> getKeys() {
        return Arrays.<UniqueKey<SelfSiteRecord>>asList(Keys.KEY_SELF_SITE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SelfSite as(String alias) {
        return new SelfSite(alias, this);
    }

    /**
     * Rename this table
     */
    public SelfSite rename(String name) {
        return new SelfSite(name, null);
    }
}
