/**
 * This class is generated by jOOQ
 */
package com.iot.baobiao.jooq;


import com.iot.baobiao.jooq.tables.Baobiaoorder;
import com.iot.baobiao.jooq.tables.SelfSite;
import com.iot.baobiao.jooq.tables.Site;
import com.iot.baobiao.jooq.tables.User;
import com.iot.baobiao.jooq.tables.UserSite;
import com.iot.baobiao.jooq.tables.records.BaobiaoorderRecord;
import com.iot.baobiao.jooq.tables.records.SelfSiteRecord;
import com.iot.baobiao.jooq.tables.records.SiteRecord;
import com.iot.baobiao.jooq.tables.records.UserRecord;
import com.iot.baobiao.jooq.tables.records.UserSiteRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>nutch</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<BaobiaoorderRecord, Integer> IDENTITY_BAOBIAOORDER = Identities0.IDENTITY_BAOBIAOORDER;
    public static final Identity<SelfSiteRecord, Integer> IDENTITY_SELF_SITE = Identities0.IDENTITY_SELF_SITE;
    public static final Identity<SiteRecord, Integer> IDENTITY_SITE = Identities0.IDENTITY_SITE;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<UserSiteRecord, Integer> IDENTITY_USER_SITE = Identities0.IDENTITY_USER_SITE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BaobiaoorderRecord> KEY_BAOBIAOORDER_PRIMARY = UniqueKeys0.KEY_BAOBIAOORDER_PRIMARY;
    public static final UniqueKey<BaobiaoorderRecord> KEY_BAOBIAOORDER_ID_UNIQUE = UniqueKeys0.KEY_BAOBIAOORDER_ID_UNIQUE;
    public static final UniqueKey<SelfSiteRecord> KEY_SELF_SITE_PRIMARY = UniqueKeys0.KEY_SELF_SITE_PRIMARY;
    public static final UniqueKey<SiteRecord> KEY_SITE_PRIMARY = UniqueKeys0.KEY_SITE_PRIMARY;
    public static final UniqueKey<SiteRecord> KEY_SITE_ID_UNIQUE = UniqueKeys0.KEY_SITE_ID_UNIQUE;
    public static final UniqueKey<SiteRecord> KEY_SITE_DOMAIN_UNIQUE = UniqueKeys0.KEY_SITE_DOMAIN_UNIQUE;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PHONENUM = UniqueKeys0.KEY_USER_PHONENUM;
    public static final UniqueKey<UserSiteRecord> KEY_USER_SITE_PRIMARY = UniqueKeys0.KEY_USER_SITE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<BaobiaoorderRecord, Integer> IDENTITY_BAOBIAOORDER = createIdentity(Baobiaoorder.BAOBIAOORDER, Baobiaoorder.BAOBIAOORDER.ID);
        public static Identity<SelfSiteRecord, Integer> IDENTITY_SELF_SITE = createIdentity(SelfSite.SELF_SITE, SelfSite.SELF_SITE.ID);
        public static Identity<SiteRecord, Integer> IDENTITY_SITE = createIdentity(Site.SITE, Site.SITE.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
        public static Identity<UserSiteRecord, Integer> IDENTITY_USER_SITE = createIdentity(UserSite.USER_SITE, UserSite.USER_SITE.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<BaobiaoorderRecord> KEY_BAOBIAOORDER_PRIMARY = createUniqueKey(Baobiaoorder.BAOBIAOORDER, "KEY_baobiaoorder_PRIMARY", Baobiaoorder.BAOBIAOORDER.ID);
        public static final UniqueKey<BaobiaoorderRecord> KEY_BAOBIAOORDER_ID_UNIQUE = createUniqueKey(Baobiaoorder.BAOBIAOORDER, "KEY_baobiaoorder_id_UNIQUE", Baobiaoorder.BAOBIAOORDER.ID);
        public static final UniqueKey<SelfSiteRecord> KEY_SELF_SITE_PRIMARY = createUniqueKey(SelfSite.SELF_SITE, "KEY_self_site_PRIMARY", SelfSite.SELF_SITE.ID);
        public static final UniqueKey<SiteRecord> KEY_SITE_PRIMARY = createUniqueKey(Site.SITE, "KEY_site_PRIMARY", Site.SITE.ID);
        public static final UniqueKey<SiteRecord> KEY_SITE_ID_UNIQUE = createUniqueKey(Site.SITE, "KEY_site_id_UNIQUE", Site.SITE.ID);
        public static final UniqueKey<SiteRecord> KEY_SITE_DOMAIN_UNIQUE = createUniqueKey(Site.SITE, "KEY_site_domain_UNIQUE", Site.SITE.DOMAIN);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PHONENUM = createUniqueKey(User.USER, "KEY_user_phonenum", User.USER.PHONENUM);
        public static final UniqueKey<UserSiteRecord> KEY_USER_SITE_PRIMARY = createUniqueKey(UserSite.USER_SITE, "KEY_user_site_PRIMARY", UserSite.USER_SITE.ID);
    }
}
